{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setDarkMode","querySelector","classList","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","event","checked"],"mappings":"AAAA,aAIA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SA8BtCE,YAAc,WAClBH,SAASI,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,OACpC,EAIMC,aAAe,WACnBR,SAASI,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,QACpC,EAEME,0BAA4B,WAChC,OAAOH,aAAaI,QAAQ,YAC9B,EAEMC,yBAA2B,WAC/B,OAAOC,OAAOC,WAAW,gCAAgCC,QACrD,OACA,OACN,EAoBMC,mBAAqB,WAGhB,SADKN,6BAA+BE,4BAC3BZ,WAAWiB,QAAUd,YAAYc,OACrD,EAGMC,aAAejB,SAASkB,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAACC,GACpBA,EAAOC,iBAAiB,SAAS,SAACC,GAChCvB,WAAWwB,QAAUpB,cAAgBK,cACvC,GACF,IAIAI,OACGC,WAAW,gCACXQ,iBAAiB,UAAU,SAACC,GAC3BA,EAAMR,QAAUf,WAAWiB,QAAUd,YAAYc,OACnD,IAGFD","file":"script.js","sourcesContent":["// Toggle: if it selects the dark class then dark mode and vice versa\n\n// console.log(localStorage.getItem('colorMode'));\n\nconst darkButton = document.getElementById('dark');\nconst lightButton = document.getElementById('light');\n\n// const setColorMode = () => {\n//   // console.log('Set Color Mode');\n//   // console.log(localStorage.getItem('colorMode'));\n\n//   if (localStorage.getItem('colorMode') == 'dark') {\n//     setDarkMode();\n//     darkButton.click();\n//   } else if (localStorage.getItem('colorMode') == 'light') setLightMode();\n//   lightButton.click();\n// };\n\n// const checkMode = () => {\n//   // we want dark mode to be the default\n//   if (window.matchMedia('(prefers-color-scheme: light)').matches) {\n//     lightButton.click();\n//   } else if (window.matchMedia('(prefers-color-scheme: light)').matches) {\n//     darkButton.click();\n//   }\n// };\n\n// const checkModeChange = () => {\n//   window\n//     .matchMedia('(prefers-color-scheme:dark)')\n//     .addEventListener('change', (e) => {\n//       console.log('checkModeChange');\n//       checkMode();\n//     });\n// };\nconst setDarkMode = () => {\n  document.querySelector('body').classList = 'dark';\n  localStorage.setItem('colorMode', 'dark');\n};\n// const setLightMode = () => {\n//   document.querySelector('body').classList = 'light';\n// };\nconst setLightMode = () => {\n  document.querySelector('body').classList = 'light';\n  localStorage.setItem('colorMode', 'light');\n};\n\nconst colorModeFromLocalStorage = () => {\n  return localStorage.getItem('colorMode');\n};\n\nconst colorModeFromPreferences = () => {\n  return window.matchMedia('(prefers-color-scheme: dark)').matches\n    ? 'dark'\n    : 'light'; // If preference is set or does not match anything (light is default)\n};\n\n// setColorMode();\n// checkMode();\n\n// const radioButtons = document.querySelectorAll('.toggle__wrapper input');\n\n// for (let i = 0; i < radioButtons.length; i++) {\n//   radioButtons[i].addEventListener('click', (e) => {\n//     if (darkButton.checked) {\n//       document.querySelector('body').classList = 'dark';\n//       localStorage.setItem('colorMode', 'dark');\n//     } else {\n//       document.querySelector('body').classList = 'light';\n//       localStorage.setItem('colorMode', 'light');\n//     }\n//   });\n// }\n// add logic if its checked\n\nconst loadAndUpdateColor = () => {\n  // local storage has precendence over the prefers-color-scheme\n  const color = colorModeFromLocalStorage() || colorModeFromPreferences();\n  color == 'dark' ? darkButton.click() : lightButton.click();\n};\n\n// when the inputs are clicked, check which radio button is checked and change the color\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\nradioButtons.forEach((button) => {\n  button.addEventListener('click', (event) => {\n    darkButton.checked ? setDarkMode() : setLightMode();\n  });\n});\n\n// when the prefers-color-scheme changes, this event will be emitted\n// event reflects the media query, if it matches, the new color is dark, else it is light\nwindow\n  .matchMedia('(prefers-color-scheme: dark)')\n  .addEventListener('change', (event) => {\n    event.matches ? darkButton.click() : lightButton.click();\n  });\n\n// Load the right color on startup - localStorage has precedence\nloadAndUpdateColor();\n"]}